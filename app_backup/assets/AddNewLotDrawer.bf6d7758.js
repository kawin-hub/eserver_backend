import{bk as C,k as d,$ as L,o as O,c as U,p as e,w as s,m as S,x as F,C as N,q as a,P as B,D as q,be as I,E as D,F as P,ay as w}from"./index.49ef7351.js";import{L as z}from"./index.823c123d.js";import{r as b}from"./validators.e45b77e0.js";import{_ as A}from"./LoadingDialog.6589c96a.js";import{V as E}from"./VSpacer.8c8e1470.js";import{V as y}from"./VBtn.5345231d.js";import{V as $,c as M}from"./VCard.489135da.js";import{V as R}from"./VForm.fa4c11f3.js";import{V as j,a as f}from"./VRow.04ed429a.js";import{V as G}from"./VTextField.45867489.js";import{V as H}from"./VTextarea.07a701c1.js";import{V as J}from"./VSelect.dd7a9d71.js";import{V as K}from"./VSnackbar.d1a2f967.js";import{V as Q}from"./VNavigationDrawer.1947d485.js";const W=new z({url:C.api.url+"inventory/lots"}),X={class:"d-flex align-center pa-6 pb-1"},Y={class:"text-h6 text-capitalize"},me={__name:"AddNewLotDrawer",props:{isDrawerOpen:{type:Boolean,required:!0},fetchData:{type:Function},drawerType:{type:String},editData:{type:Object},isAddNewDrawerVisible:{type:Boolean}},emits:["update:isDrawerOpen"],setup(T,{emit:p}){const i=T,v=d(!1),c=d(),m=d(!1),r=d({name:"",description:"",status:"",avatarFile:""}),t=d({text:"",color:"",visible:!1}),g=d("Creating new category..."),V=()=>{var n,o;(n=c.value)==null||n.reset(),(o=c.value)==null||o.resetValidation(),r.value.avatarFile=null},x=W,_=()=>{p("update:isDrawerOpen",!1),w(()=>{V()})};L(()=>{i.drawerType!==void 0&&i.drawerType=="edit"&&(r.value.name=i.editData.name,r.value.description=i.editData.description,r.value.status=i.editData.status,g.value="Updating category...")});const h=async()=>{var n;(n=c.value)==null||n.validate().then(async({valid:o})=>{if(o){m.value=!0;let l=new FormData;l.append("name",r.value.name),l.append("description",r.value.description),l.append("status",r.value.status),i.drawerType=="add"?x.insertItem(l).then(u=>{i.fetchData(),t.value.text=u.data.message,t.value.color="success",t.value.visible=!0,w(()=>{p("update:isDrawerOpen",!1),V()})}).catch(u=>{console.log(u.response.data),t.value.text=u.response.data.message,t.value.color="error",t.value.visible=!0}).finally(()=>{m.value=!1}):i.drawerType=="edit"&&(l.append("_id",i.editData._id),x.updateItem(l).then(u=>{i.fetchData(),t.value.text=u.data.message,t.value.color="success",t.value.visible=!0,w(()=>{p("update:isDrawerOpen",!1),V()})}).catch(u=>{console.log(u.response.data)}).finally(()=>{m.value=!1}))}else t.value.text="Please fill up all the require field.",t.value.color="error",t.value.visible=!0})},k=n=>{p("update:isDrawerOpen",n)};return(n,o)=>(O(),U(P,null,[e(Q,{temporary:"",width:400,location:"end",class:"scrollable-content","model-value":i.isDrawerOpen,"onUpdate:modelValue":k},{default:s(()=>[S("div",X,[S("h6",Y,F(i.drawerType)+" Location",1),e(E),e(y,{variant:"tonal",color:"default",icon:"",size:"32",class:"rounded",onClick:_},{default:s(()=>[e(N,{size:"18",icon:"tabler-x"})]),_:1})]),e(a(B),{options:{wheelPropagation:!1}},{default:s(()=>[e($,{flat:""},{default:s(()=>[e(M,null,{default:s(()=>[e(R,{ref_key:"refForm",ref:c,modelValue:a(v),"onUpdate:modelValue":o[4]||(o[4]=l=>q(v)?v.value=l:null),onSubmit:I(h,["prevent"])},{default:s(()=>[e(j,null,{default:s(()=>[e(f,{cols:"12"},{default:s(()=>[e(G,{modelValue:a(r).name,"onUpdate:modelValue":o[0]||(o[0]=l=>a(r).name=l),rules:[a(b)],label:"name"},null,8,["modelValue","rules"])]),_:1}),e(f,{cols:"12"},{default:s(()=>[e(H,{modelValue:a(r).description,"onUpdate:modelValue":o[1]||(o[1]=l=>a(r).description=l),rules:[a(b)],label:"Description"},null,8,["modelValue","rules"])]),_:1}),e(f,{cols:"12"},{default:s(()=>[e(J,{modelValue:a(r).status,"onUpdate:modelValue":o[2]||(o[2]=l=>a(r).status=l),label:"Select Status",rules:[a(b)],items:[{title:"Active",value:"active"},{title:"Inactive",value:"inactive"}]},null,8,["modelValue","rules"])]),_:1}),e(f,{cols:"12"},{default:s(()=>[e(y,{type:"submit",class:"me-3"},{default:s(()=>[D(" Submit ")]),_:1}),e(y,{type:"reset",variant:"tonal",color:"secondary",onClick:_},{default:s(()=>[D(" Cancel ")]),_:1})]),_:1}),e(K,{modelValue:a(t).visible,"onUpdate:modelValue":o[3]||(o[3]=l=>a(t).visible=l),location:"bottom end",variant:"flat",color:a(t).color},{default:s(()=>[D(F(a(t).text),1)]),_:1},8,["modelValue","color"])]),_:1})]),_:1},8,["modelValue","onSubmit"])]),_:1})]),_:1})]),_:1})]),_:1},8,["model-value"]),e(A,{isDialogVisible:a(m),txtDisplay:a(g)},null,8,["isDialogVisible","txtDisplay"])],64))}};export{me as _,W as u};
